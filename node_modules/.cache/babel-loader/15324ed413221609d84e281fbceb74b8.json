{"ast":null,"code":"var _jsxFileName = \"/Users/eberge/Desktop/USC/ITP_404/Assignments/assignment-6-ellyrberge/src/FollowButton.js\";\nimport React, { useState, useEffect } from 'react';\nimport { fetchFollow, deleteFollow, saveFollow } from './api.js';\nexport default function FollowButton({\n  memberID\n}) {\n  const [followers, setFollowers] = useState([]);\n  const [buttonText, setButtonText] = useState(\"Follow\");\n  const [isFollowers, setIsFollowers] = useState(false); // useEffect(() => {\n  //     fetchFollow().then((f) => {\n  //       if(f.length !== 0){\n  //         setFollowers(f)\n  //         setIsFollowers(true)\n  //       }\n  //     })\n  // }, [isFollowers]);\n\n  function addFollower(event) {\n    saveFollow({\n      followerID: event.target.value\n    }).then(newFollower => {\n      setFollowers(followers.concat(newFollower));\n      setIsFollowers(true);\n    });\n  }\n\n  function deleteFollower(event) {\n    const follower = followers.filter(f => {\n      return f.followerID === Number(event.target.value);\n    });\n  }\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, isFollowers ? /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    className: \"btn btn-outline-danger\",\n    value: memberID,\n    onClick: deleteFollower,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 29\n    }\n  }, \"Unfollow\") : /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    className: \"btn btn-outline-danger\",\n    value: memberID,\n    onClick: addFollower,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 14\n    }\n  }, \"Follow\"));\n}","map":{"version":3,"sources":["/Users/eberge/Desktop/USC/ITP_404/Assignments/assignment-6-ellyrberge/src/FollowButton.js"],"names":["React","useState","useEffect","fetchFollow","deleteFollow","saveFollow","FollowButton","memberID","followers","setFollowers","buttonText","setButtonText","isFollowers","setIsFollowers","addFollower","event","followerID","target","value","then","newFollower","concat","deleteFollower","follower","filter","f","Number"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAAQC,WAAR,EAAqBC,YAArB,EAAmCC,UAAnC,QAAoD,UAApD;AAGA,eAAe,SAASC,YAAT,CAAsB;AAACC,EAAAA;AAAD,CAAtB,EAAiC;AAC5C,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BR,QAAQ,CAAC,EAAD,CAA1C;AACA,QAAM,CAACS,UAAD,EAAaC,aAAb,IAA8BV,QAAQ,CAAC,QAAD,CAA5C;AACA,QAAM,CAACW,WAAD,EAAcC,cAAd,IAAgCZ,QAAQ,CAAC,KAAD,CAA9C,CAH4C,CAI5C;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;AACA,WAASa,WAAT,CAAqBC,KAArB,EAA2B;AACvBV,IAAAA,UAAU,CAAC;AACPW,MAAAA,UAAU,EAAED,KAAK,CAACE,MAAN,CAAaC;AADlB,KAAD,CAAV,CAEKC,IAFL,CAEWC,WAAD,IAAiB;AACrBX,MAAAA,YAAY,CAACD,SAAS,CAACa,MAAV,CAAiBD,WAAjB,CAAD,CAAZ;AACAP,MAAAA,cAAc,CAAC,IAAD,CAAd;AAEL,KAND;AAOH;;AACD,WAASS,cAAT,CAAwBP,KAAxB,EAA8B;AAC1B,UAAMQ,QAAQ,GAAGf,SAAS,CAACgB,MAAV,CAAkBC,CAAD,IAAO;AACrC,aAAQA,CAAC,CAACT,UAAF,KAAiBU,MAAM,CAACX,KAAK,CAACE,MAAN,CAAaC,KAAd,CAA/B;AACH,KAFgB,CAAjB;AAIH;;AACD,sBACI,0CACKN,WAAW,gBAAI;AAAQ,IAAA,IAAI,EAAC,QAAb;AAAsB,IAAA,SAAS,EAAC,wBAAhC;AAAyD,IAAA,KAAK,EAAEL,QAAhE;AAA0E,IAAA,OAAO,EAAEe,cAAnF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAAJ,gBACX;AAAQ,IAAA,IAAI,EAAC,QAAb;AAAsB,IAAA,SAAS,EAAC,wBAAhC;AAAyD,IAAA,KAAK,EAAEf,QAAhE;AAA0E,IAAA,OAAO,EAAEO,WAAnF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFL,CADJ;AAOH","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport {fetchFollow, deleteFollow, saveFollow} from './api.js';\n\n\nexport default function FollowButton({memberID}){\n    const [followers, setFollowers] = useState([])\n    const [buttonText, setButtonText] = useState(\"Follow\")\n    const [isFollowers, setIsFollowers] = useState(false)\n    // useEffect(() => {\n    //     fetchFollow().then((f) => {\n    //       if(f.length !== 0){\n    //         setFollowers(f)\n    //         setIsFollowers(true)\n    //       }\n    //     })\n        \n    // }, [isFollowers]);\n    function addFollower(event){\n        saveFollow({\n            followerID: event.target.value,\n          }).then((newFollower) => {\n              setFollowers(followers.concat(newFollower))\n              setIsFollowers(true);\n            \n        })\n    }\n    function deleteFollower(event){\n        const follower = followers.filter((f) => {\n            return (f.followerID === Number(event.target.value))\n        })\n       \n    }\n    return(\n        <>  \n            {isFollowers ? (<button type=\"button\" className=\"btn btn-outline-danger\" value={memberID} onClick={deleteFollower}>Unfollow</button>):\n            (<button type=\"button\" className=\"btn btn-outline-danger\" value={memberID} onClick={addFollower}>Follow</button>)\n            }\n        </>\n    );\n}"]},"metadata":{},"sourceType":"module"}