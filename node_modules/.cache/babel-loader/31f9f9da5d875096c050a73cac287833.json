{"ast":null,"code":"var _jsxFileName = \"/Users/eberge/Desktop/USC/ITP_404/Assignments/assignment-6-ellyrberge/src/FollowButton.js\";\nimport React, { useState, useEffect } from 'react';\nimport { fetchFollow, deleteFollow, saveFollow } from './api.js';\nexport default function FollowButton({\n  memberID\n}) {\n  const [followers, setFollowers] = useState([]);\n  const [buttonText, setButtonText] = useState(\"Follow\");\n  const [isFollowers, setIsFollowers] = useState(false);\n  useEffect(() => {\n    fetchFollow().then(f => {\n      if (f.length !== 0) {\n        setFollowers(f);\n        setIsFollowers(true);\n      }\n    });\n  }, [isFollowers]);\n\n  function addFollower(event) {\n    saveFollow({\n      followerID: event.target.value\n    }).then(newFollower => {\n      setFollowers(followers.concat(newFollower));\n      setIsFollowers(true);\n      setButtonText(\"Follow\");\n    });\n  }\n\n  function deleteFollower(event) {\n    followers.map(f => {\n      if (f.followerID === Number(event.target.value)) {\n        deleteFollow(f.id).then(() => {\n          setIsFollowers(false);\n        });\n      }\n    });\n  }\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    className: \"btn btn-outline-danger\",\n    value: memberID,\n    onClick: addFollower,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }\n  }, \"Follow\"));\n}","map":{"version":3,"sources":["/Users/eberge/Desktop/USC/ITP_404/Assignments/assignment-6-ellyrberge/src/FollowButton.js"],"names":["React","useState","useEffect","fetchFollow","deleteFollow","saveFollow","FollowButton","memberID","followers","setFollowers","buttonText","setButtonText","isFollowers","setIsFollowers","then","f","length","addFollower","event","followerID","target","value","newFollower","concat","deleteFollower","map","Number","id"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAAQC,WAAR,EAAqBC,YAArB,EAAmCC,UAAnC,QAAoD,UAApD;AAGA,eAAe,SAASC,YAAT,CAAsB;AAACC,EAAAA;AAAD,CAAtB,EAAiC;AAC5C,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BR,QAAQ,CAAC,EAAD,CAA1C;AACA,QAAM,CAACS,UAAD,EAAaC,aAAb,IAA8BV,QAAQ,CAAC,QAAD,CAA5C;AACA,QAAM,CAACW,WAAD,EAAcC,cAAd,IAAgCZ,QAAQ,CAAC,KAAD,CAA9C;AACAC,EAAAA,SAAS,CAAC,MAAM;AACZC,IAAAA,WAAW,GAAGW,IAAd,CAAoBC,CAAD,IAAO;AACxB,UAAGA,CAAC,CAACC,MAAF,KAAa,CAAhB,EAAkB;AAChBP,QAAAA,YAAY,CAACM,CAAD,CAAZ;AACAF,QAAAA,cAAc,CAAC,IAAD,CAAd;AACD;AACF,KALD;AAOH,GARQ,EAQN,CAACD,WAAD,CARM,CAAT;;AASA,WAASK,WAAT,CAAqBC,KAArB,EAA2B;AACvBb,IAAAA,UAAU,CAAC;AACPc,MAAAA,UAAU,EAAED,KAAK,CAACE,MAAN,CAAaC;AADlB,KAAD,CAAV,CAEKP,IAFL,CAEWQ,WAAD,IAAiB;AACrBb,MAAAA,YAAY,CAACD,SAAS,CAACe,MAAV,CAAiBD,WAAjB,CAAD,CAAZ;AACAT,MAAAA,cAAc,CAAC,IAAD,CAAd;AACAF,MAAAA,aAAa,CAAC,QAAD,CAAb;AAEL,KAPD;AAQH;;AACD,WAASa,cAAT,CAAwBN,KAAxB,EAA8B;AAC1BV,IAAAA,SAAS,CAACiB,GAAV,CAAeV,CAAD,IAAO;AACjB,UAAIA,CAAC,CAACI,UAAF,KAAiBO,MAAM,CAACR,KAAK,CAACE,MAAN,CAAaC,KAAd,CAA3B,EAAgD;AAC5CjB,QAAAA,YAAY,CAACW,CAAC,CAACY,EAAH,CAAZ,CAAmBb,IAAnB,CAAyB,MAAM;AAC3BD,UAAAA,cAAc,CAAC,KAAD,CAAd;AAEH,SAHD;AAIH;AACJ,KAPD;AASH;;AACD,sBACI,uDAQI;AAAQ,IAAA,IAAI,EAAC,QAAb;AAAsB,IAAA,SAAS,EAAC,wBAAhC;AAAyD,IAAA,KAAK,EAAEN,QAAhE;AAA0E,IAAA,OAAO,EAAEU,WAAnF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cARJ,CADJ;AAYH","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport {fetchFollow, deleteFollow, saveFollow} from './api.js';\n\n\nexport default function FollowButton({memberID}){\n    const [followers, setFollowers] = useState([])\n    const [buttonText, setButtonText] = useState(\"Follow\")\n    const [isFollowers, setIsFollowers] = useState(false)\n    useEffect(() => {\n        fetchFollow().then((f) => {\n          if(f.length !== 0){\n            setFollowers(f)\n            setIsFollowers(true)\n          }\n        })\n        \n    }, [isFollowers]);\n    function addFollower(event){\n        saveFollow({\n            followerID: event.target.value,\n          }).then((newFollower) => {\n              setFollowers(followers.concat(newFollower))\n              setIsFollowers(true);\n              setButtonText(\"Follow\")\n            \n        })\n    }\n    function deleteFollower(event){\n        followers.map((f) => {\n            if (f.followerID === Number(event.target.value)){\n                deleteFollow(f.id).then (() => {\n                    setIsFollowers(false)\n\n                });\n            }\n        })\n       \n    }\n    return(\n        <>  \n            {/* {isFollowers ? (followers.map((f) => {\n                if(Number(f.followerID) === memberID){\n                    return(<button type=\"button\" className=\"btn btn-outline-danger\" value={memberID} onClick={deleteFollower}>Unfollow</button>);\n                }else {\n                    return(<button type=\"button\" className=\"btn btn-outline-danger\" value={memberID} onClick={addFollower}>Follow</button>);\n                }\n            })) : (<button type=\"button\" className=\"btn btn-outline-danger\" value={memberID} onClick={addFollower}>Follow</button>)}      */}\n            <button type=\"button\" className=\"btn btn-outline-danger\" value={memberID} onClick={addFollower}>Follow</button>\n        </>\n    );\n}"]},"metadata":{},"sourceType":"module"}